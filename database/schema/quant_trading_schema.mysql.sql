-- Auto-generated by scripts/export_schema.py
-- Dialect: MySQL


CREATE TABLE categories (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	category_id VARCHAR(50) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	parent_id VARCHAR(50), 
	path VARCHAR(500), 
	level INTEGER, 
	sort_order INTEGER, 
	icon VARCHAR(50), 
	color VARCHAR(20), 
	description TEXT, 
	stock_count INTEGER, 
	total_stock_count INTEGER, 
	is_active BOOL, 
	is_custom BOOL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_categories_category_id ON categories (category_id);

CREATE INDEX ix_categories_parent_id ON categories (parent_id);

CREATE INDEX ix_categories_id ON categories (id);


CREATE TABLE category_stock_relations (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	category_id VARCHAR(50) NOT NULL, 
	stock_code VARCHAR(20) NOT NULL, 
	weight FLOAT, 
	is_primary BOOL, 
	notes TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_category_stock_relations_stock_code ON category_stock_relations (stock_code);

CREATE INDEX ix_category_stock_relations_id ON category_stock_relations (id);

CREATE INDEX ix_category_stock_relations_category_id ON category_stock_relations (category_id);

CREATE UNIQUE INDEX idx_category_stock_unique ON category_stock_relations (category_id, stock_code);


CREATE TABLE data_sync_tasks (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	task_id VARCHAR(50) NOT NULL, 
	task_type VARCHAR(20) NOT NULL, 
	trigger_source VARCHAR(20), 
	status VARCHAR(20), 
	progress FLOAT, 
	total_stocks INTEGER, 
	processed_stocks INTEGER, 
	success_stocks INTEGER, 
	failed_stocks INTEGER, 
	daily_records INTEGER, 
	hourly_records INTEGER, 
	force_full_sync BOOL, 
	target_symbols TEXT, 
	start_time DATETIME NOT NULL, 
	end_time DATETIME, 
	duration_seconds FLOAT, 
	result_summary TEXT, 
	error_details TEXT, 
	sync_details TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_data_sync_tasks_id ON data_sync_tasks (id);

CREATE UNIQUE INDEX ix_data_sync_tasks_task_id ON data_sync_tasks (task_id);


CREATE TABLE emotion_records (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	record_id VARCHAR(50) NOT NULL, 
	trade_id VARCHAR(50), 
	plan_id VARCHAR(50), 
	emotion_type VARCHAR(20) NOT NULL, 
	emotion_intensity FLOAT NOT NULL, 
	emotion_description TEXT, 
	trigger_factors TEXT, 
	trigger_source VARCHAR(50), 
	recorded_at DATETIME, 
	trade_phase VARCHAR(20), 
	intervention_taken BOOL, 
	intervention_type VARCHAR(50), 
	intervention_effectiveness VARCHAR(20), 
	rationality_score FLOAT, 
	confidence_score FLOAT, 
	stress_level FLOAT, 
	created_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_emotion_records_id ON emotion_records (id);

CREATE UNIQUE INDEX ix_emotion_records_record_id ON emotion_records (record_id);


CREATE TABLE expert_opinions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	opinion_id VARCHAR(50) NOT NULL, 
	stock_code VARCHAR(20) NOT NULL, 
	expert_id VARCHAR(50) NOT NULL, 
	title VARCHAR(200) NOT NULL, 
	content TEXT NOT NULL, 
	sentiment VARCHAR(20) NOT NULL, 
	price_guidances TEXT, 
	chart_images TEXT, 
	published_at DATETIME NOT NULL, 
	source VARCHAR(200), 
	tags TEXT, 
	is_active BOOL, 
	priority VARCHAR(20), 
	is_bookmarked BOOL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_expert_opinions_id ON expert_opinions (id);

CREATE UNIQUE INDEX ix_expert_opinions_opinion_id ON expert_opinions (opinion_id);


CREATE TABLE experts (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	expert_id VARCHAR(50) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	title VARCHAR(200), 
	credibility INTEGER, 
	specialties TEXT, 
	description TEXT, 
	is_verified BOOL, 
	is_active BOOL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_experts_id ON experts (id);

CREATE UNIQUE INDEX ix_experts_expert_id ON experts (expert_id);


CREATE TABLE klines_15min (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX idx_15min_code_time ON klines_15min (code, trade_time);

CREATE INDEX ix_klines_15min_trade_time ON klines_15min (trade_time);

CREATE INDEX ix_klines_15min_code ON klines_15min (code);

CREATE INDEX ix_klines_15min_id ON klines_15min (id);

CREATE UNIQUE INDEX idx_15min_code_key ON klines_15min (code, time_key);


CREATE TABLE klines_1hour (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX idx_1hour_code_time ON klines_1hour (code, trade_time);

CREATE UNIQUE INDEX idx_1hour_code_key ON klines_1hour (code, time_key);

CREATE INDEX ix_klines_1hour_trade_time ON klines_1hour (trade_time);

CREATE INDEX ix_klines_1hour_code ON klines_1hour (code);

CREATE INDEX ix_klines_1hour_id ON klines_1hour (id);


CREATE TABLE klines_1min (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX ix_klines_1min_code ON klines_1min (code);

CREATE INDEX idx_1min_code_time ON klines_1min (code, trade_time);

CREATE UNIQUE INDEX idx_1min_code_key ON klines_1min (code, time_key);

CREATE INDEX ix_klines_1min_trade_time ON klines_1min (trade_time);

CREATE INDEX ix_klines_1min_id ON klines_1min (id);


CREATE TABLE klines_30min (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE UNIQUE INDEX idx_30min_code_key ON klines_30min (code, time_key);

CREATE INDEX ix_klines_30min_trade_time ON klines_30min (trade_time);

CREATE INDEX ix_klines_30min_code ON klines_30min (code);

CREATE INDEX ix_klines_30min_id ON klines_30min (id);

CREATE INDEX idx_30min_code_time ON klines_30min (code, trade_time);


CREATE TABLE klines_3min (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE UNIQUE INDEX idx_3min_code_key ON klines_3min (code, time_key);

CREATE INDEX idx_3min_code_time ON klines_3min (code, trade_time);

CREATE INDEX ix_klines_3min_id ON klines_3min (id);

CREATE INDEX ix_klines_3min_code ON klines_3min (code);

CREATE INDEX ix_klines_3min_trade_time ON klines_3min (trade_time);


CREATE TABLE klines_4hour (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX ix_klines_4hour_code ON klines_4hour (code);

CREATE INDEX ix_klines_4hour_id ON klines_4hour (id);

CREATE UNIQUE INDEX idx_4hour_code_key ON klines_4hour (code, time_key);

CREATE INDEX ix_klines_4hour_trade_time ON klines_4hour (trade_time);

CREATE INDEX idx_4hour_code_time ON klines_4hour (code, trade_time);


CREATE TABLE klines_5min (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX idx_5min_code_time ON klines_5min (code, trade_time);

CREATE INDEX ix_klines_5min_id ON klines_5min (id);

CREATE INDEX ix_klines_5min_code ON klines_5min (code);

CREATE INDEX ix_klines_5min_trade_time ON klines_5min (trade_time);

CREATE UNIQUE INDEX idx_5min_code_key ON klines_5min (code, time_key);


CREATE TABLE klines_daily (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX idx_daily_code_time ON klines_daily (code, trade_time);

CREATE UNIQUE INDEX idx_daily_code_key ON klines_daily (code, time_key);

CREATE INDEX ix_klines_daily_trade_time ON klines_daily (trade_time);

CREATE INDEX ix_klines_daily_code ON klines_daily (code);

CREATE INDEX ix_klines_daily_id ON klines_daily (id);


CREATE TABLE klines_monthly (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE UNIQUE INDEX idx_monthly_code_key ON klines_monthly (code, time_key);

CREATE INDEX ix_klines_monthly_id ON klines_monthly (id);

CREATE INDEX idx_monthly_code_time ON klines_monthly (code, trade_time);

CREATE INDEX ix_klines_monthly_code ON klines_monthly (code);

CREATE INDEX ix_klines_monthly_trade_time ON klines_monthly (trade_time);


CREATE TABLE klines_weekly (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	time_key VARCHAR(20) NOT NULL COMMENT '时间键', 
	trade_time DATETIME NOT NULL COMMENT '交易时间', 
	open_price FLOAT NOT NULL COMMENT '开盘价', 
	close_price FLOAT NOT NULL COMMENT '收盘价', 
	high_price FLOAT NOT NULL COMMENT '最高价', 
	low_price FLOAT NOT NULL COMMENT '最低价', 
	volume INTEGER COMMENT '成交量', 
	turnover FLOAT COMMENT '成交额', 
	change_rate FLOAT COMMENT '涨跌幅', 
	amplitude FLOAT COMMENT '振幅', 
	created_at DATETIME COMMENT '创建时间', 
	PRIMARY KEY (id), 
	FOREIGN KEY(code) REFERENCES stocks (code) ON DELETE CASCADE
)

;

CREATE INDEX idx_weekly_code_time ON klines_weekly (code, trade_time);

CREATE INDEX ix_klines_weekly_trade_time ON klines_weekly (trade_time);

CREATE INDEX ix_klines_weekly_id ON klines_weekly (id);

CREATE INDEX ix_klines_weekly_code ON klines_weekly (code);

CREATE UNIQUE INDEX idx_weekly_code_key ON klines_weekly (code, time_key);


CREATE TABLE positions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	position_id VARCHAR(50) NOT NULL, 
	stock_code VARCHAR(20) NOT NULL, 
	stock_name VARCHAR(100) NOT NULL, 
	plan_id VARCHAR(50), 
	quantity INTEGER NOT NULL, 
	avg_cost FLOAT NOT NULL, 
	current_price FLOAT, 
	market_value FLOAT, 
	profit_loss FLOAT, 
	profit_loss_ratio FLOAT, 
	stop_loss_price FLOAT, 
	take_profit_price FLOAT, 
	status VARCHAR(20), 
	opened_at DATETIME NOT NULL, 
	closed_at DATETIME, 
	highest_price FLOAT, 
	lowest_price FLOAT, 
	max_profit_ratio FLOAT, 
	max_loss_ratio FLOAT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_positions_position_id ON positions (position_id);

CREATE INDEX ix_positions_id ON positions (id);


CREATE TABLE selection_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	strategy_id INTEGER NOT NULL, 
	stock_symbol VARCHAR(20) NOT NULL, 
	execution_time DATETIME NOT NULL, 
	score FLOAT NOT NULL, 
	confidence VARCHAR(20) NOT NULL, 
	reasons TEXT, 
	suggested_action VARCHAR(100), 
	target_price FLOAT, 
	stop_loss FLOAT, 
	current_price FLOAT, 
	technical_details TEXT, 
	risk_level INTEGER, 
	processed BOOL, 
	created_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_selection_results_id ON selection_results (id);


CREATE TABLE selection_strategies (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	strategy_id VARCHAR(50) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	description TEXT, 
	category VARCHAR(50) NOT NULL, 
	conditions TEXT NOT NULL, 
	parameters TEXT, 
	is_active BOOL, 
	is_system_default BOOL, 
	usage_count INTEGER, 
	success_rate FLOAT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_selection_strategies_strategy_id ON selection_strategies (strategy_id);

CREATE INDEX ix_selection_strategies_id ON selection_strategies (id);


CREATE TABLE stock_sync_status (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	stock_code VARCHAR(20) NOT NULL, 
	timeframe VARCHAR(10) NOT NULL, 
	earliest_data_date DATE, 
	latest_data_date DATE, 
	target_start_date DATE, 
	target_end_date DATE, 
	sync_status VARCHAR(20), 
	last_sync_time DATETIME, 
	last_successful_sync DATETIME, 
	total_records INTEGER, 
	expected_records INTEGER, 
	failed_ranges TEXT, 
	retry_count INTEGER, 
	last_error TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX idx_stock_timeframe ON stock_sync_status (stock_code, timeframe);

CREATE INDEX ix_stock_sync_status_stock_code ON stock_sync_status (stock_code);

CREATE INDEX ix_stock_sync_status_id ON stock_sync_status (id);


CREATE TABLE stocks (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(20) NOT NULL COMMENT '股票代码', 
	name VARCHAR(100) NOT NULL COMMENT '股票名称', 
	market VARCHAR(10) NOT NULL COMMENT '市场: US, HK, CN', 
	lot_size INTEGER COMMENT '交易单位', 
	sec_type VARCHAR(20) COMMENT '证券类型', 
	market_cap VARCHAR(20) COMMENT '市值级别: large, mid, small', 
	watch_level VARCHAR(20) COMMENT '关注等级: high, medium, low', 
	notes TEXT COMMENT '用户备注', 
	added_at DATETIME COMMENT '添加时间', 
	updated_at DATETIME COMMENT '更新时间', 
	is_active BOOL COMMENT '是否有效', 
	PRIMARY KEY (id)
)

;

CREATE INDEX idx_stock_market ON stocks (market);

CREATE INDEX ix_stocks_id ON stocks (id);

CREATE INDEX idx_stock_code ON stocks (code);

CREATE INDEX idx_stock_active ON stocks (is_active);

CREATE UNIQUE INDEX ix_stocks_code ON stocks (code);


CREATE TABLE strategies (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	name VARCHAR(100) NOT NULL, 
	description TEXT, 
	category VARCHAR(50) NOT NULL, 
	impl_type VARCHAR(100) NOT NULL, 
	configuration TEXT, 
	timeframe VARCHAR(10) NOT NULL, 
	enabled BOOL, 
	is_system_default BOOL, 
	execution_count INTEGER, 
	last_execution_time DATETIME, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_strategies_id ON strategies (id);


CREATE TABLE trade_records (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	trade_id VARCHAR(50) NOT NULL, 
	plan_id VARCHAR(50) NOT NULL, 
	stock_code VARCHAR(20) NOT NULL, 
	stock_name VARCHAR(100) NOT NULL, 
	trade_direction VARCHAR(10) NOT NULL, 
	trade_type VARCHAR(20) NOT NULL, 
	actual_price FLOAT NOT NULL, 
	actual_quantity INTEGER NOT NULL, 
	actual_amount FLOAT NOT NULL, 
	commission FLOAT, 
	executed_at DATETIME NOT NULL, 
	execution_score FLOAT, 
	plan_deviation_ratio FLOAT, 
	is_emotional_trade BOOL, 
	emotional_factors TEXT, 
	execution_notes TEXT, 
	deviation_reason TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_trade_records_trade_id ON trade_records (trade_id);

CREATE INDEX ix_trade_records_id ON trade_records (id);


CREATE TABLE trading_discipline (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	discipline_id VARCHAR(50) NOT NULL, 
	score_date DATETIME NOT NULL, 
	total_score FLOAT NOT NULL, 
	plan_completeness_score FLOAT, 
	execution_consistency_score FLOAT, 
	risk_control_score FLOAT, 
	emotional_control_score FLOAT, 
	review_quality_score FLOAT, 
	total_trades INTEGER, 
	successful_trades INTEGER, 
	emotional_trades INTEGER, 
	plan_deviation_count INTEGER, 
	score_trend VARCHAR(20), 
	improvement_suggestions TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_trading_discipline_discipline_id ON trading_discipline (discipline_id);

CREATE INDEX ix_trading_discipline_id ON trading_discipline (id);


CREATE TABLE trading_plans (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	plan_id VARCHAR(50) NOT NULL, 
	stock_code VARCHAR(20) NOT NULL, 
	stock_name VARCHAR(100) NOT NULL, 
	plan_type VARCHAR(20) NOT NULL, 
	trade_direction VARCHAR(10) NOT NULL, 
	trade_type VARCHAR(20) NOT NULL, 
	buy_reason TEXT NOT NULL, 
	target_price FLOAT NOT NULL, 
	position_size FLOAT NOT NULL, 
	max_position_ratio FLOAT, 
	stop_loss_price FLOAT NOT NULL, 
	stop_loss_ratio FLOAT NOT NULL, 
	take_profit_price FLOAT, 
	take_profit_ratio FLOAT, 
	batch_profit_plan TEXT, 
	expected_hold_period VARCHAR(20), 
	planned_entry_date DATETIME, 
	planned_exit_date DATETIME, 
	plan_score FLOAT, 
	risk_reward_ratio FLOAT, 
	confidence_level VARCHAR(20), 
	status VARCHAR(20), 
	is_locked BOOL, 
	lock_reason VARCHAR(200), 
	related_strategy_id VARCHAR(50), 
	related_playbook_id VARCHAR(50), 
	created_at DATETIME, 
	updated_at DATETIME, 
	completed_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE INDEX ix_trading_plans_id ON trading_plans (id);

CREATE UNIQUE INDEX ix_trading_plans_plan_id ON trading_plans (plan_id);


CREATE TABLE trading_playbooks (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	playbook_id VARCHAR(50) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	description TEXT, 
	template TEXT NOT NULL, 
	tags TEXT, 
	is_system_default BOOL, 
	is_active BOOL, 
	usage_count INTEGER, 
	performance TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_trading_playbooks_playbook_id ON trading_playbooks (playbook_id);

CREATE INDEX ix_trading_playbooks_id ON trading_playbooks (id);


CREATE TABLE trading_reviews (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	review_id VARCHAR(50) NOT NULL, 
	trade_id VARCHAR(50) NOT NULL, 
	plan_id VARCHAR(50), 
	review_type VARCHAR(20) NOT NULL, 
	review_date DATETIME NOT NULL, 
	actual_profit_loss FLOAT, 
	actual_profit_loss_ratio FLOAT, 
	plan_vs_result VARCHAR(20), 
	discipline_execution_score FLOAT, 
	emotional_control_score FLOAT, 
	risk_management_score FLOAT, 
	highlights TEXT, 
	shortcomings TEXT, 
	lessons_learned TEXT, 
	improvement_plan TEXT, 
	psychological_factors TEXT, 
	emotional_triggers_identified TEXT, 
	is_completed BOOL, 
	quality_score FLOAT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)

;

CREATE UNIQUE INDEX ix_trading_reviews_review_id ON trading_reviews (review_id);

CREATE INDEX ix_trading_reviews_id ON trading_reviews (id);
